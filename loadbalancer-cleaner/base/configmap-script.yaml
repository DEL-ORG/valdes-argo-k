apiVersion: v1
kind: ConfigMap
metadata:
  name: lb-cleaner-script
  namespace: loadbalancer-cleaner
data:
  cleanup-lb-services.sh: |
    #!/bin/bash
    set -euo pipefail

    APPROVED_NAMESPACES=$(cat /config/approved-namespaces)
    IFS=',' read -r -a APPROVED_ARRAY <<< "$APPROVED_NAMESPACES"

    DRY_RUN=${DRY_RUN:-false}
    echo "Dry-run mode: $DRY_RUN"
    echo "Approved namespaces: ${APPROVED_ARRAY[@]}"
    echo "Checking for LoadBalancer services..."

    kubectl get svc --all-namespaces -o json | jq -r '
      .items[] | select(.spec.type=="LoadBalancer") |
      "\(.metadata.namespace) \(.metadata.name)"' | while read namespace svc; do

      if [[ ! " ${APPROVED_ARRAY[@]} " =~ " ${namespace} " ]]; then
      
        if [[ "$DRY_RUN" == "true" ]]; then
          echo "[DRY-RUN] Would patch Service ${namespace}/${svc} to ClusterIP"
          kubectl patch svc "${svc}" -n "${namespace}" --type merge -p '{"spec": {"type": "ClusterIP"}}' --dry-run=client
        else
          echo "Patching unauthorized LoadBalancer Service: ${namespace}/${svc} â†’ ClusterIP"
          kubectl patch svc "${svc}" -n "${namespace}" --type merge -p '{"spec": {"type": "ClusterIP"}}' || \
            echo "Failed to patch ${namespace}/${svc}"
        fi

      else
        echo "Keeping authorized LoadBalancer Service: ${namespace}/${svc}"
      fi
    done

    echo "Cleanup complete."
